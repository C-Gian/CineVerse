@page "/movies/search"
@page "/movies/list"

@using CineVerse.client.Components
@using CineVerse.client.ApiResponses

@if (IsLoading)
{
    <MudProgressCircular Size="Size.Large" Class="m-6" />
}
else
{
    <div class="search-panel">

        <div class="search-box">
            <Icon Name="IconName.Search" class="icon" />
            <input type="text"
                   placeholder="Search for a movie…"
                   @bind="_query"
                   @onkeydown="HandleKeyDown" />
        </div>

        <EditForm Model="SearchFiltersModel" OnValidSubmit="HandleSearchAsync" class="search-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="filters-container">
                <!-- GENRES -->
                <TitleWrapperComponent Label="Genres"
                                       TooltipText="Pick one or more genres; the search will match any of the selected genres.">
                    <GenresFilterComponent Genres="Genres"
                                           OnGenreChanged="HandleGenreChange" />
                </TitleWrapperComponent>

                <!-- RATING -->
                <TitleWrapperComponent Label="Rating"
                                       TooltipText="Filter by TMDB vote average. Specify the minimum and/or maximum rating (0 to 10).">
                    <RatingFilter OnRatingChanged="HandleRatingChanged" />
                </TitleWrapperComponent>

                <!-- REGION -->
                <TitleWrapperComponent Label="Region"
                                       TooltipText="Country on which to base the search filters (certification, providers, release dates etc.)">
                    <SingleSelectComponent TItem="CountryApiResponse" TValue="string"
                                           Items="Countries"
                                           TextSelector="c => c.NativeName"
                                           ValueSelector="c => c.Code"
                                           Searchable="true"
                                           @bind-SelectedValue="SearchFiltersModel.Region" />
                </TitleWrapperComponent>

                <!-- RELEASE YEAR FROM -->
                <TitleWrapperComponent Label="Release Year From"
                                       TooltipText="Include movies released on or after the year you specify (e.g. 2000).">
                    <TextboxComponent InputType="number"
                                      Placeholder="e.g. 2000"
                                      @bind-Value="SearchFiltersModel.FromYear"
                                      Check="ValidateFromYearRange" />
                </TitleWrapperComponent>

                <!-- RELEASE YEAR TO -->
                <TitleWrapperComponent Label="Release Year To"
                                       TooltipText="Include movies released on or before the year you specify (e.g. 2024).">
                    <TextboxComponent InputType="number"
                                      Placeholder="e.g. 2024"
                                      @bind-Value="SearchFiltersModel.ToYear"
                                      Check="ValidateToYearRange" />
                </TitleWrapperComponent>

                <!-- CERTIFICATIONS -->
                <TitleWrapperComponent Label="Certifications"
                                       TooltipText="Pick one or more age-ratings (e.g. ‘T’, ‘VM14’) that a movie must carry in the selected country.">
                    <MultiSelectComponent TItem="CertificationApiResponse" TValue="string"
                                          Items="CertificationCountry"
                                          TextSelector="c => c.Certification"
                                          ValueSelector="c => c.Certification"
                                          @bind-SelectedValues="SearchFiltersModel.SelectedCertCodes" />
                </TitleWrapperComponent>

                <!-- STREAMING PROVIDERS -->
                <TitleWrapperComponent Label="Providers"
                                       TooltipText="Show only titles available on the selected streaming services for the chosen watch region.">
                    <MultiSelectComponent TItem="GeneralWatchProvider" TValue="int"
                                          Items="WatchProviders"
                                          TextSelector="p => p.ProviderName"
                                          ValueSelector="p => p.ProviderId"
                                          @bind-SelectedValues="SearchFiltersModel.SelectedProviderIds" />
                </TitleWrapperComponent>

                <!-- ADULT CONTENT -->
                <TitleWrapperComponent Label="Adult Content"
                                       TooltipText="Toggle ON to include titles marked as adult / explicit in the results.">
                    <ToggleSwitch Label="Include Explicit Content"
                                  @bind-Checked="SearchFiltersModel.IncludeAdult" />
                </TitleWrapperComponent>

                <!-- SORT -->
                <TitleWrapperComponent Label="Sort by"
                                       TooltipText="Choose how the results are ordered (popularity, release date, revenue, etc.).">
                    <SingleSelectComponent TItem="(string Value,string Label)" TValue="string"
                                           Items="AppState.SortOptions"
                                           TextSelector="o => o.Label"
                                           ValueSelector="o => o.Value"
                                           @bind-SelectedValue="SearchFiltersModel.SortBy" />
                </TitleWrapperComponent>
            </div>

            <div class="search-button-group">
                <button type="submit" class="search-btn">Search</button>
                <button type="button" class="search-clear-btn" @onclick="ClearSearchFilters">Clear</button>
            </div>
        </EditForm>

    </div>


    @if (Movies.Any())
    {
        <MovieGrid Movies="Movies" PageChanged="LoadMoviesAsync" CurrentPage="CurrentPage" />
    }
    else
    {
        <h1>NO MOVIES</h1>
    }
}


<style>
    .search-panel {
        position: relative;
        z-index: 9999;
        display: flex;
        flex-direction: column;
        margin: 50px;
        padding: 24px;
        gap: 30px;
        border-radius: 18px;
        background: rgba(13,17,31,1);
        backdrop-filter: blur(12px);
    }

    .search-box {
        display: flex;
        width: 100%;
        position: relative;
        flex: 1;
    }

        .search-box .icon {
            position: absolute;
            top: 50%;
            left: 16px;
            transform: translateY(-50%);
            font-size: 1.1rem;
            color: #7a7a7a;
            pointer-events: none;
        }

        .search-box input {
            width: 100%;
            height: 56px;
            padding: 0 18px 0 48px;
            border: none;
            border-radius: 12px;
            background: rgba(200,200,200,0.02);
            color: #fff;
            font-size: 1rem;
            outline: none !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.30), 0 0 0 1px rgba(255,255,255,0.01) inset;
        }

            .search-box input::placeholder {
                color: #8a8da5;
            }

    .search-btn {
        padding: 0.75rem 1.8rem;
        font-size: 1rem;
        font-weight: 600;
        border-radius: 10px;
        background: linear-gradient(135deg, #7459ff, #6247ff);
        color: #fff;
        border: none;
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .search-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(116,89,255,0.4);
        }

    .search-clear-btn {
        padding: 0.75rem 1.8rem;
        font-size: 1rem;
        font-weight: 600;
        border-radius: 10px;
        background: transparent;
        color: #ccc;
        border: 2px solid #7459ff;
        cursor: pointer;
        transition: background 0.2s ease, color 0.2s ease;
    }

        .search-clear-btn:hover {
            background: #7459ff;
            color: white;
        }

    .filters-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
    }

    .search-form {
        display: flex;
        flex-direction: column;
        gap: 2rem; 
    }

    .search-button-group {
        display: flex;
        justify-content: flex-end;
        margin-top: 2rem;
        gap: 20px;
        align-items: center;
        vertical-align: middle;
    }

</style> 
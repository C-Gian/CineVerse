
<div class="upcoming-slider" @onmouseenter="Pause" @onmouseleave="Resume">
	<div class="slider-list">
		@foreach (var movie in Movies.Take(MaxVisible))
		{
			<div class="slider-list-item @(movie == Selected ? "active" : "")"
			@onclick="() => Select(movie)">
				<img src="@PosterUrl(movie.PosterPath)" />
				<div class="date">
					<div class="day">@GetDate(movie.ReleaseDate).ToString("MMM dd")</div>
					<div class="year">@GetDate(movie.ReleaseDate).Year</div>
				</div>
			</div>
		}
	</div>

	<div class="slider-preview" @onclick="NavigateToDetails">
		@if (Selected is not null)
		{
			<div class="preview-img" style="background-image:url('@BackdropUrl(Selected.BackdropPath)')"></div>

			<div class="preview-bottom">
				<img class="poster-preview" src="@PosterUrl(Selected.PosterPath, "w342")" />

				<div class="preview-overlay">
					<h2>@Selected.Title</h2>
					@{
						if (AppState.Genres.Any() && Selected.GenreIds.Any())
						{
							var genreNames = Selected.GenreIds
								.Select(id => AppState.Genres.FirstOrDefault(g => g.Id == id)?.Name)
								.Where(name => !string.IsNullOrWhiteSpace(name))
								.ToList();
							<GenreTags Genres="genreNames" Width="600px" />
						} else
						{
							<MudProgressCircular Size="Size.Large" Class="m-6" />
						}
					}
				</div>
			</div>
		}
	</div>
</div>